// Generated by CoffeeScript 1.11.1
(function() {
  var f_writeToHistoryArray, getDifference;

  getDifference = require('./getDifference');

  f_writeToHistoryArray = require('./f_writeToHistoryArray');


  /*
  INPUT:
  	testResults: [
  		{
      		path: {test, target - strings}
  			error: Error || null
  			result: undefined || {success, failure - arrays of string}
      	}
      ]
      history: {
      	fileName: {
      		date: timestamp
      		success: array of string
      		failure: array of string
      	}
      }
      rawHistory: [
      	{
      		file: string - file path
      		data: [
      			{
  					date: timestamp
  					success: array of string
  					failure: array of string
  				}
      			...
      		]
      	}
      ]
  
  OUTPUT:
      [
      	{
      		file: string - path to target file
      		all: undefined || {success, failure - arrays of string}
      		error: Error || null
      		new: undefined || {
  				success: array of newly successful tests
  				failure: array of newly failed tests
  				added: new tests
  				removed: removed tests
      		}
      	}
      ]
   */

  module.exports = function(testResults, history, rawHistory) {
    var date, difference, fileHistory, fileTest, i, len, pushLog, result, targetFile, writeToTestHistory;
    writeToTestHistory = f_writeToHistoryArray(rawHistory);
    date = Date.now();
    result = [];
    for (i = 0, len = testResults.length; i < len; i++) {
      fileTest = testResults[i];
      targetFile = fileTest['path'].target;
      pushLog = function(error, newChanges) {
        return result.push({
          file: targetFile,
          all: fileTest.result,
          error: error,
          "new": newChanges
        });
      };
      if (fileTest.error != null) {
        pushLog(fileTest.error, void 0);
      } else {
        fileHistory = history[targetFile];
        difference = getDifference(fileTest.result, fileHistory);
        pushLog(null, difference);
        writeToTestHistory(targetFile, {
          date: date,
          success: fileTest.result.success,
          failure: fileTest.result.failure
        });
      }
    }
    return result;
  };

}).call(this);

//# sourceMappingURL=process.js.map
