// Generated by CoffeeScript 1.8.0
(function() {
  var isEmpty, testResultChanged;

  isEmpty = function(array) {
    return array.length === 0;
  };

  testResultChanged = function(difference) {
    return !isEmpty(difference.success) || !isEmpty(difference.failure) || !isEmpty(difference.added) || !isEmpty(difference.removed);
  };

  module.exports = function(testOutput) {
    var changes, currentTestStates, file, fileResult, newChanges, result, testError, testErrors, testResult, _i, _len;
    result = testOutput.result;
    currentTestStates = [];
    testErrors = [];
    newChanges = [];
    for (_i = 0, _len = result.length; _i < _len; _i++) {
      fileResult = result[_i];
      file = fileResult.file;
      testResult = fileResult.all;
      testError = fileResult.error;
      changes = fileResult["new"];
      if (testError != null) {
        testErrors.push({
          file: file,
          error: testError
        });
      } else {
        currentTestStates.push({
          file: file,
          state: testResult
        });
        if (testResultChanged(changes)) {
          newChanges.push({
            file: file,
            changes: changes
          });
        }
      }
    }
    return {
      all: currentTestStates,
      errors: testErrors,
      "new": newChanges,
      raw: testOutput.raw
    };
  };

}).call(this);
