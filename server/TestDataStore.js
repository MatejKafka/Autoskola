// Generated by CoffeeScript 1.11.1
(function() {
  var ReadOnlyCollection, TestDataStore, fs, logger, path;

  path = require('path');

  fs = require('fs');

  ReadOnlyCollection = require('./ReadOnlyCollection');

  logger = global.logger.getChildLogger('testDataStore');

  module.exports = TestDataStore = (function() {
    function TestDataStore(dataStoreDir) {
      this._loadSections(path.resolve(dataStoreDir, 'sections.json'));
      this._loadQuestions(path.resolve(dataStoreDir, 'questions.json'));
      logger.log('Test data loaded');
    }

    TestDataStore.prototype._loadSections = function(sectionFilePath) {
      this.sections = this._loadTestDataPart(sectionFilePath);
      return logger.log('Sections loaded', this.sections.length);
    };

    TestDataStore.prototype._loadQuestions = function(questionFilePath) {
      this.questions = this._loadTestDataPart(questionFilePath);
      return logger.log('Questions loaded', this.questions.length);
    };

    TestDataStore.prototype._loadTestDataPart = function(filePath) {
      var testDataStr;
      try {
        testDataStr = fs.readFileSync(filePath);
        return new ReadOnlyCollection(JSON.parse(testDataStr));
      } catch (error) {
        logger.log('No valid file found at ' + filePath, {
          filePath: filePath
        });
        return new ReadOnlyCollection([]);
      }
    };

    return TestDataStore;

  })();

}).call(this);

//# sourceMappingURL=TestDataStore.js.map
